#!/usr/bin/env ts-node

/**
 * BitcoinBazaar - Quick Check
 * Verificaci√≥n r√°pida del sistema de testing
 */

import { setupTestWallet } from './setup-test-wallet'
import { TEST_CONFIG } from './test-config'

// ‚ö†Ô∏è CONFIGURAR TU SECRET KEY AQU√ç
const SECRET_KEY = 'give suggest source long enhance razor candy margin gadget index muscle start'

async function quickCheck() {
  console.log('‚ö° === BITCOINBAZAAR QUICK CHECK ===\n')

  // Verificar configuraci√≥n
  if (!SECRET_KEY || SECRET_KEY.length < 20) {
    console.log('‚ùå CONFIGURACI√ìN REQUERIDA')
    console.log('1. Edita tests/quick-check.ts')
    console.log('2. Reemplaza YOUR_LEATHER_SECRET_KEY_HERE con tu secret key')
    console.log('3. Ejecuta nuevamente\n')
    return
  }

  console.log('‚úÖ Secret key configurada\n')

  // Verificar wallet
  console.log('üîê Verificando wallet...')
  try {
    await setupTestWallet(SECRET_KEY)
    console.log('‚úÖ Wallet verificado\n')
  } catch (error) {
    console.error('‚ùå Error verificando wallet:', error)
    return
  }

  // Mostrar configuraci√≥n
  console.log('üìã === CONFIGURACI√ìN DE TESTING ===')
  console.log(`üåê Network: ${TEST_CONFIG.network.name}`)
  console.log(`üì° API: ${TEST_CONFIG.network.coreApiUrl}`)
  console.log(`üîó Explorer: ${TEST_CONFIG.network.explorerUrl}`)
  console.log(`üí∞ Min Balance: ${TEST_CONFIG.testing.minStxBalance} STX`)
  console.log(`‚è±Ô∏è  Timeout: ${TEST_CONFIG.testing.testTimeout}ms`)
  console.log(`üîÑ Retries: ${TEST_CONFIG.testing.retryAttempts}`)

  // Mostrar contratos
  console.log('\nüìÑ === CONTRATOS DESPLEGADOS ===')
  Object.entries(TEST_CONFIG.contracts).forEach(([name, address]) => {
    console.log(`${name}: ${address}`)
  })

  // Mostrar comandos
  console.log('\nüöÄ === COMANDOS DISPONIBLES ===')
  console.log('npm run test:integration     # Ejecutar todos los tests')
  console.log('npm run test:wallet         # Solo verificar wallet')
  console.log('npm run test:onchain        # Solo tests on-chain')
  console.log('npm run test:integration --verbose  # Modo verbose')

  console.log('\n‚úÖ === QUICK CHECK COMPLETADO ===')
  console.log('¬°El sistema est√° listo para testing!')
}

// Ejecutar si se llama directamente
if (require.main === module) {
  quickCheck().catch(console.error)
}

export { quickCheck }
